//
// SearchAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class SearchAPI {
    /**
     Search for a repository
     
     - parameter accept: (header) Setting to application/vnd.github.v3+json is recommended. 
     - parameter q: (query) The query contains one or more search keywords and qualifiers. 
     - parameter sort: (query) Sorts the results of your query by number of stars, forks, or help-wanted-issues or how recently the items were updated. Default: best match. (optional)
     - parameter order: (query) Determines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc). This parameter is ignored unless you provide sort. Default: desc. (optional)
     - parameter perPage: (query) Results per page (max 100). Default: 30. (optional)
     - parameter page: (query) Page number of the results to fetch. Default: 1. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func searchRepositoriesGet(accept: String, q: String, sort: String? = nil, order: String? = nil, perPage: Int? = nil, page: Int? = nil, completion: @escaping ((_ data: SearchResponseDTO?,_ error: Error?) -> Void)) {
        searchRepositoriesGetWithRequestBuilder(accept: accept, q: q, sort: sort, order: order, perPage: perPage, page: page).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Search for a repository
     - GET /search/repositories
     - Find repositories via various criteria
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter accept: (header) Setting to application/vnd.github.v3+json is recommended. 
     - parameter q: (query) The query contains one or more search keywords and qualifiers. 
     - parameter sort: (query) Sorts the results of your query by number of stars, forks, or help-wanted-issues or how recently the items were updated. Default: best match. (optional)
     - parameter order: (query) Determines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc). This parameter is ignored unless you provide sort. Default: desc. (optional)
     - parameter perPage: (query) Results per page (max 100). Default: 30. (optional)
     - parameter page: (query) Page number of the results to fetch. Default: 1. (optional)

     - returns: RequestBuilder<SearchResponseDTO> 
     */
    open class func searchRepositoriesGetWithRequestBuilder(accept: String, q: String, sort: String? = nil, order: String? = nil, perPage: Int? = nil, page: Int? = nil) -> RequestBuilder<SearchResponseDTO> {
        let path = "/search/repositories"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "q": q, 
            "sort": sort, 
            "order": order, 
            "per_page": perPage?.encodeToJSON(), 
            "page": page?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "accept": accept
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SearchResponseDTO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
