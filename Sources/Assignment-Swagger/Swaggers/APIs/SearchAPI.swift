//
// SearchAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class SearchAPI {

    /**
     Search for a repository
     
     - parameter accept: (header) Setting to application/vnd.github.v3+json is recommended. 
     - parameter q: (query) The query contains one or more search keywords and qualifiers. 
     - parameter sort: (query) Sorts the results of your query by number of stars, forks, or help-wanted-issues or how recently the items were updated. Default: best match. (optional)
     - parameter order: (query) Determines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc). This parameter is ignored unless you provide sort. Default: desc. (optional)
     - parameter perPage: (query) Results per page (max 100). Default: 30. (optional)
     - parameter page: (query) Page number of the results to fetch. Default: 1. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func searchRepositoriesGet(accept: String, q: String, sort: String? = nil, order: String? = nil, perPage: Int? = nil, page: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SearchResponseDTO?, _ error: Error?) -> Void)) -> RequestTask {
        return searchRepositoriesGetWithRequestBuilder(accept: accept, q: q, sort: sort, order: order, perPage: perPage, page: page).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Search for a repository
     - GET /search/repositories
     - Find repositories via various criteria
     - parameter accept: (header) Setting to application/vnd.github.v3+json is recommended. 
     - parameter q: (query) The query contains one or more search keywords and qualifiers. 
     - parameter sort: (query) Sorts the results of your query by number of stars, forks, or help-wanted-issues or how recently the items were updated. Default: best match. (optional)
     - parameter order: (query) Determines whether the first search result returned is the highest number of matches (desc) or lowest number of matches (asc). This parameter is ignored unless you provide sort. Default: desc. (optional)
     - parameter perPage: (query) Results per page (max 100). Default: 30. (optional)
     - parameter page: (query) Page number of the results to fetch. Default: 1. (optional)
     - returns: RequestBuilder<SearchResponseDTO> 
     */
    open class func searchRepositoriesGetWithRequestBuilder(accept: String, q: String, sort: String? = nil, order: String? = nil, perPage: Int? = nil, page: Int? = nil) -> RequestBuilder<SearchResponseDTO> {
        let localVariablePath = "/search/repositories"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "q": (wrappedValue: q.encodeToJSON(), isExplode: false),
            "sort": (wrappedValue: sort?.encodeToJSON(), isExplode: false),
            "order": (wrappedValue: order?.encodeToJSON(), isExplode: false),
            "per_page": (wrappedValue: perPage?.encodeToJSON(), isExplode: false),
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "accept": accept.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SearchResponseDTO>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
